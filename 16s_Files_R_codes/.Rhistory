geom_errorbar(data=df3B, aes(ymin=as.numeric(df3B$mean_Fb-df3B$SD_fb), ymax=as.numeric(mean_Fb+df3B$SD_fb), color="mean_Fb", na.rm = TRUE), width=.2,position=position_dodge(0.01))+
geom_point(data=df3B, aes(y=mean_Fm, x=Depth_m, color="mean_Fm"))+
geom_line(data=df3B, aes(y=mean_Fm, x=Depth_m, color="mean_Fm"))+
geom_errorbar(data=df3B, aes(ymin=as.numeric(df3B$mean_Fm-df3B$SD_fm), ymax=as.numeric(mean_Fm+df3B$SD_fm), color="mean_Fm"), width=.2,position=position_dodge(0.01))+
geom_point(data=df3BC, aes(y=mean_Fr, x=Depth_m, color="mean_Fr"))+
geom_line(data=df3BC, aes(y=mean_Fr, x=Depth_m, color="mean_Fr"))+
scale_colour_manual("", breaks = c("mean_Fb", "mean_Fm", "mean_Fr"),
values = c("blue", "black", "red"), labels=c("Basal fluorescence (Fb)", "Maximum fluorescence (Fm)", "Blank (Fr)"))+
coord_flip()+ theme_bw()+
scale_x_reverse(limits = c(21,1), breaks=c(19, 17, 15.5, 15, 14, 13, 11,9, 7,5, 3, 1))+
xlab("Depth (m)")+
ylab("fluorescence value")+
annotate("rect", ymin=-Inf, ymax=Inf, xmin=-Inf, xmax=12.5, alpha=0.1, fill="green4")+
annotate("rect", ymin=-Inf, ymax=Inf, xmin=12.5, xmax=13.5, alpha=0.2, fill="deeppink4")+
annotate("rect", ymin=-Inf, ymax=Inf, xmin=13.5, xmax=15.5, alpha=0.5, fill="deeppink4")+
annotate("rect", ymin=-Inf, ymax=Inf, xmin=15.5, xmax=16.5, alpha=0.2, fill="deeppink4")+
annotate("rect", ymin=-Inf, ymax=Inf, xmin=16.5, xmax=Inf, alpha=0.2, fill="pink4")+
theme(axis.text=element_text(size=12),axis.title=element_text(size=12,face="bold"))+
theme(
# Hide panel borders and remove grid lines
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
# Change axis line
)+theme(legend.position = c(0.45, 0.65))
dt
dt<- ggplot(data=df3B, aes(y=mean_Fb, x=Depth_m))+
geom_point(data=df3B, aes(y=mean_Fb, x=Depth_m, color="mean_Fb"))+
geom_line(data=df3B, aes(y=mean_Fb, x=Depth_m, color="mean_Fb"))+
geom_errorbar(data=df3B, aes(ymin=as.numeric(df3B$mean_Fb-df3B$SD_fb), ymax=as.numeric(mean_Fb+df3B$SD_fb), color="mean_Fb", na.rm = TRUE), width=.2,position=position_dodge(0.01))+
geom_point(data=df3B, aes(y=mean_Fm, x=Depth_m, color="mean_Fm"))+
geom_line(data=df3B, aes(y=mean_Fm, x=Depth_m, color="mean_Fm"))+
geom_errorbar(data=df3B, aes(ymin=as.numeric(df3B$mean_Fm-df3B$SD_fm), ymax=as.numeric(mean_Fm+df3B$SD_fm), color="mean_Fm"), width=.2,position=position_dodge(0.01))+
geom_point(data=df3BC, aes(y=mean_Fr, x=Depth_m, color="mean_Fr"))+
geom_line(data=df3BC, aes(y=mean_Fr, x=Depth_m, color="mean_Fr"))+
scale_colour_manual("", breaks = c("mean_Fb", "mean_Fm", "mean_Fr"),
values = c("blue", "black", "red"), labels=c("Basal fluorescence (Fb)", "Maximum fluorescence (Fm)", "Blank (Fr)"))+
coord_flip()+ theme_bw()+
scale_x_reverse(limits = c(21,1), breaks=c(19, 17, 15.5, 15, 14, 13, 11,9, 7,5, 3, 1))+
xlab("Depth (m)")+
ylab("fluorescence value")+
annotate("rect", ymin=-Inf, ymax=Inf, xmin=-Inf, xmax=12.5, alpha=0.1, fill="green4")+
annotate("rect", ymin=-Inf, ymax=Inf, xmin=12.5, xmax=13.5, alpha=0.2, fill="deeppink4")+
annotate("rect", ymin=-Inf, ymax=Inf, xmin=13.5, xmax=15.5, alpha=0.5, fill="deeppink4")+
annotate("rect", ymin=-Inf, ymax=Inf, xmin=15.5, xmax=16.5, alpha=0.2, fill="deeppink4")+
annotate("rect", ymin=-Inf, ymax=Inf, xmin=16.5, xmax=Inf, alpha=0.2, fill="pink4")+
theme(axis.text=element_text(size=12),axis.title=element_text(size=12,face="bold"))+
theme(
# Hide panel borders and remove grid lines
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
# Change axis line
)+theme(legend.position = c(0.45, 0.65))+
theme(legend.background = element_rect(size=0.3,
colour ="transparent", fill = "transparent"))
dt
dt<- ggplot(data=df3B, aes(y=mean_Fb, x=Depth_m))+
geom_point(data=df3B, aes(y=mean_Fb, x=Depth_m, color="mean_Fb"))+
geom_line(data=df3B, aes(y=mean_Fb, x=Depth_m, color="mean_Fb"))+
geom_errorbar(data=df3B, aes(ymin=as.numeric(df3B$mean_Fb-df3B$SD_fb), ymax=as.numeric(mean_Fb+df3B$SD_fb), color="mean_Fb", na.rm = TRUE), width=.2,position=position_dodge(0.01))+
geom_point(data=df3B, aes(y=mean_Fm, x=Depth_m, color="mean_Fm"))+
geom_line(data=df3B, aes(y=mean_Fm, x=Depth_m, color="mean_Fm"))+
geom_errorbar(data=df3B, aes(ymin=as.numeric(df3B$mean_Fm-df3B$SD_fm), ymax=as.numeric(mean_Fm+df3B$SD_fm), color="mean_Fm"), width=.2,position=position_dodge(0.01))+
geom_point(data=df3BC, aes(y=mean_Fr, x=Depth_m, color="mean_Fr"))+
geom_line(data=df3BC, aes(y=mean_Fr, x=Depth_m, color="mean_Fr"))+
scale_colour_manual("", breaks = c("mean_Fb", "mean_Fm", "mean_Fr"),
values = c("blue", "black", "red"), labels=c("Basal fluorescence (Fb)", "Maximum fluorescence (Fm)", "Blank (Fr)"))+
coord_flip()+ theme_bw()+
scale_x_reverse(limits = c(21,1), breaks=c(19, 17, 15.5, 15, 14, 13, 11,9, 7,5, 3, 1))+
xlab("Depth (m)")+
ylab("fluorescence value")+
annotate("rect", ymin=-Inf, ymax=Inf, xmin=-Inf, xmax=12.5, alpha=0.1, fill="green4")+
annotate("rect", ymin=-Inf, ymax=Inf, xmin=12.5, xmax=13.5, alpha=0.2, fill="deeppink4")+
annotate("rect", ymin=-Inf, ymax=Inf, xmin=13.5, xmax=15.5, alpha=0.5, fill="deeppink4")+
annotate("rect", ymin=-Inf, ymax=Inf, xmin=15.5, xmax=16.5, alpha=0.2, fill="deeppink4")+
annotate("rect", ymin=-Inf, ymax=Inf, xmin=16.5, xmax=Inf, alpha=0.2, fill="pink4")+
theme(axis.text=element_text(size=12),axis.title=element_text(size=12,face="bold"))+
theme(
# Hide panel borders and remove grid lines
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
# Change axis line
)+theme(legend.position = c(0.45, 0.65))+
theme(legend.background = element_rect(size=0.3, colour ="transparent", fill = "transparent"), legend.box.background = element_rect(colour = "black",   fill = "transparent"))
dt
dt<- ggplot(data=df3B, aes(y=mean_Fb, x=Depth_m))+
geom_point(data=df3B, aes(y=mean_Fb, x=Depth_m, color="mean_Fb"))+
geom_line(data=df3B, aes(y=mean_Fb, x=Depth_m, color="mean_Fb"))+
geom_errorbar(data=df3B, aes(ymin=as.numeric(df3B$mean_Fb-df3B$SD_fb), ymax=as.numeric(mean_Fb+df3B$SD_fb), color="mean_Fb", na.rm = TRUE), width=.2,position=position_dodge(0.01))+
geom_point(data=df3B, aes(y=mean_Fm, x=Depth_m, color="mean_Fm"))+
geom_line(data=df3B, aes(y=mean_Fm, x=Depth_m, color="mean_Fm"))+
geom_errorbar(data=df3B, aes(ymin=as.numeric(df3B$mean_Fm-df3B$SD_fm), ymax=as.numeric(mean_Fm+df3B$SD_fm), color="mean_Fm"), width=.2,position=position_dodge(0.01))+
geom_point(data=df3BC, aes(y=mean_Fr, x=Depth_m, color="mean_Fr"))+
geom_line(data=df3BC, aes(y=mean_Fr, x=Depth_m, color="mean_Fr"))+
scale_colour_manual("", breaks = c("mean_Fb", "mean_Fm", "mean_Fr"),
values = c("blue", "black", "red"), labels=c("Basal fluorescence (Fb)", "Maximum fluorescence (Fm)", "Blank (Fr)"))+
coord_flip()+ theme_bw()+
scale_x_reverse(limits = c(21,1), breaks=c(19, 17, 15.5, 15, 14, 13, 11,9, 7,5, 3, 1))+
xlab("Depth (m)")+
ylab("fluorescence value")+
annotate("rect", ymin=-Inf, ymax=Inf, xmin=-Inf, xmax=12.5, alpha=0.1, fill="green4")+
annotate("rect", ymin=-Inf, ymax=Inf, xmin=12.5, xmax=13.5, alpha=0.2, fill="deeppink4")+
annotate("rect", ymin=-Inf, ymax=Inf, xmin=13.5, xmax=15.5, alpha=0.5, fill="deeppink4")+
annotate("rect", ymin=-Inf, ymax=Inf, xmin=15.5, xmax=16.5, alpha=0.2, fill="deeppink4")+
annotate("rect", ymin=-Inf, ymax=Inf, xmin=16.5, xmax=Inf, alpha=0.2, fill="pink4")+
theme(axis.text=element_text(size=12),axis.title=element_text(size=12,face="bold"))+
theme(
# Hide panel borders and remove grid lines
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
# Change axis line
)+theme(legend.position = c(0.45, 0.65))+
theme(legend.background = element_rect(size=0.3, colour ="transparent", fill = "transparent"))
dt
dt<- ggplot(data=df3B, aes(y=mean_Fb, x=Depth_m))+
geom_point(data=df3B, aes(y=mean_Fb, x=Depth_m, color="mean_Fb"))+
geom_line(data=df3B, aes(y=mean_Fb, x=Depth_m, color="mean_Fb"))+
geom_errorbar(data=df3B, aes(ymin=as.numeric(df3B$mean_Fb-df3B$SD_fb), ymax=as.numeric(mean_Fb+df3B$SD_fb), color="mean_Fb", na.rm = TRUE), width=.2,position=position_dodge(0.01))+
geom_point(data=df3B, aes(y=mean_Fm, x=Depth_m, color="mean_Fm"))+
geom_line(data=df3B, aes(y=mean_Fm, x=Depth_m, color="mean_Fm"))+
geom_errorbar(data=df3B, aes(ymin=as.numeric(df3B$mean_Fm-df3B$SD_fm), ymax=as.numeric(mean_Fm+df3B$SD_fm), color="mean_Fm"), width=.2,position=position_dodge(0.01))+
geom_point(data=df3BC, aes(y=mean_Fr, x=Depth_m, color="mean_Fr"))+
geom_line(data=df3BC, aes(y=mean_Fr, x=Depth_m, color="mean_Fr"))+
scale_colour_manual("", breaks = c("mean_Fb", "mean_Fm", "mean_Fr"),
values = c("blue", "black", "red"), labels=c("Basal fluorescence (Fb)", "Maximum fluorescence (Fm)", "Blank (Fr)"))+
coord_flip()+ theme_bw()+
scale_x_reverse(limits = c(21,1), breaks=c(19, 17, 15.5, 15, 14, 13, 11,9, 7,5, 3, 1))+
xlab("Depth (m)")+
ylab("fluorescence value")+
annotate("rect", ymin=-Inf, ymax=Inf, xmin=-Inf, xmax=12.5, alpha=0.1, fill="green4")+
annotate("rect", ymin=-Inf, ymax=Inf, xmin=12.5, xmax=13.5, alpha=0.2, fill="deeppink4")+
annotate("rect", ymin=-Inf, ymax=Inf, xmin=13.5, xmax=15.5, alpha=0.5, fill="deeppink4")+
annotate("rect", ymin=-Inf, ymax=Inf, xmin=15.5, xmax=16.5, alpha=0.2, fill="deeppink4")+
annotate("rect", ymin=-Inf, ymax=Inf, xmin=16.5, xmax=Inf, alpha=0.2, fill="pink4")+
theme(axis.text=element_text(size=12),axis.title=element_text(size=12,face="bold"))+
theme(
# Hide panel borders and remove grid lines
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
# Change axis line
)+theme(legend.position = c(0.65, 0.65))+
theme(legend.background = element_rect(size=0.3, colour ="transparent", fill = "transparent"))
dt
dt<- ggplot(data=df3B, aes(y=mean_Fb, x=Depth_m))+
geom_point(data=df3B, aes(y=mean_Fb, x=Depth_m, color="mean_Fb"))+
geom_line(data=df3B, aes(y=mean_Fb, x=Depth_m, color="mean_Fb"))+
geom_errorbar(data=df3B, aes(ymin=as.numeric(df3B$mean_Fb-df3B$SD_fb), ymax=as.numeric(mean_Fb+df3B$SD_fb), color="mean_Fb", na.rm = TRUE), width=.2,position=position_dodge(0.01))+
geom_point(data=df3B, aes(y=mean_Fm, x=Depth_m, color="mean_Fm"))+
geom_line(data=df3B, aes(y=mean_Fm, x=Depth_m, color="mean_Fm"))+
geom_errorbar(data=df3B, aes(ymin=as.numeric(df3B$mean_Fm-df3B$SD_fm), ymax=as.numeric(mean_Fm+df3B$SD_fm), color="mean_Fm"), width=.2,position=position_dodge(0.01))+
geom_point(data=df3BC, aes(y=mean_Fr, x=Depth_m, color="mean_Fr"))+
geom_line(data=df3BC, aes(y=mean_Fr, x=Depth_m, color="mean_Fr"))+
scale_colour_manual("", breaks = c("mean_Fb", "mean_Fm", "mean_Fr"),
values = c("blue", "black", "red"), labels=c("Basal fluorescence (Fb)", "Maximum fluorescence (Fm)", "Blank (Fr)"))+
coord_flip()+ theme_bw()+
scale_x_reverse(limits = c(21,1), breaks=c(19, 17, 15.5, 15, 14, 13, 11,9, 7,5, 3, 1))+
xlab("Depth (m)")+
ylab("fluorescence value")+
annotate("rect", ymin=-Inf, ymax=Inf, xmin=-Inf, xmax=12.5, alpha=0.1, fill="green4")+
annotate("rect", ymin=-Inf, ymax=Inf, xmin=12.5, xmax=13.5, alpha=0.2, fill="deeppink4")+
annotate("rect", ymin=-Inf, ymax=Inf, xmin=13.5, xmax=15.5, alpha=0.5, fill="deeppink4")+
annotate("rect", ymin=-Inf, ymax=Inf, xmin=15.5, xmax=16.5, alpha=0.2, fill="deeppink4")+
annotate("rect", ymin=-Inf, ymax=Inf, xmin=16.5, xmax=Inf, alpha=0.2, fill="pink4")+
theme(axis.text=element_text(size=12),axis.title=element_text(size=12,face="bold"))+
theme(
# Hide panel borders and remove grid lines
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
# Change axis line
)+theme(legend.position = c(0.55, 0.65))+
theme(legend.background = element_rect(size=0.3, colour ="transparent", fill = "transparent"))
dt
View(GPSIA_2BC)
library(knitr)
require(knitr)
#opts_knit$set(root.dir = "~/Box Sync/files_for_R/")
#setwd("~/Desktop/files_for_R/")
setwd("~/GitHub/Lake_Cadagno_microbial_loop_Saini_et_al_2021/16s_Files_R_codes/")
knitr::opts_chunk$set(eval = TRUE,
echo = TRUE,
cache = FALSE,
include = TRUE,
collapse = FALSE,
message=FALSE,
warning=FALSE,
dependson = NULL,
error = TRUE,
fig.align = "center")
library(ggplot2)
library(vegan)
library(dplyr)
library(scales)
library(grid)
library(reshape2)
library(plyr)
library(phyloseq)
library(magrittr)
library(geosphere)
library(matrixStats)
library(data.table)
library(DT)
library(colorspace)
library(corrplot)
library(Hmisc)
library(tidyverse)
library(readxl)
library(corrplot)
library(ggpubr)
library(cowplot)
library(ggplot2)
library(vegan)
library(dplyr)
library(scales)
library(grid)
library(reshape2)
library(plyr)
library(phyloseq)
library(magrittr)
library(geosphere)
library(matrixStats)
library(data.table)
library(DT)
#library(ggpubr)
#library(DESeq2)
library(colorspace)
# library(remotes)
library(ggrepel)
#library(ggpubr)
library(ape)
library(devtools)
library(readxl)
library(RColorBrewer)
# Assign variables for imported data
sharedfile="~/GitHub/Lake_Cadagno_microbial_loop_Saini_et_al_2021/16s_Files_R_codes/stability.trim.contigs.good.unique.good.filter.unique.precluster.pick.pick.an.unique_list.shared"
taxfile = "~/GitHub/Lake_Cadagno_microbial_loop_Saini_et_al_2021/16s_Files_R_codes/stability.trim.contigs.good.unique.good.filter.unique.precluster.pick.pick.an.unique_list.0.03.cons.taxonomy"
mapfile = read.csv("~/GitHub/Lake_Cadagno_microbial_loop_Saini_et_al_2021/16s_Files_R_codes/16s_LC_meta2.csv")
#mapfile$new_layer <- cut(mapfile$depth_m, c(-Inf,7,12,13.5,15,16.5, Inf), c("UM", "LM", "UCH", "CH","LCH" ,"Mo"))
#mapfile<- merge(mapfile0, means_f, by.x="depth_m", by.y ="Label")
# Import mothur data
mothur_data <- import_mothur(mothur_shared_file = sharedfile, mothur_constaxonomy_file = taxfile)
View (mothur_data)
# Import sample metadata
#map <- read.table(mapfile)
#view(map)
rownames(mapfile) <- mapfile$Sample_ID
view(mapfile)
sam= sample_data(mapfile)
#View(map)
#head(map)
phylo <- merge_phyloseq(mothur_data, sam) # the final phyloseq object to work with
phylo
#Next we will calculate summary statistics describing the sequence counts with the summary() function. We will then represent these stats with a boxplot and a histogram
# From sorting this table by decreasing sequence count, we can see that there were a few samples that had only a small number of reads. We will remove these (prune) from our data for analysis later on.
##make a data frame with a column for the sequence counts of each sample
phylo_sum_df <- data.frame(sum = sample_sums(phylo))
datatable(phylo_sum_df,
options = list(pageLength = 10),
caption = "Sum of sequences per sample"
)
as.tibble (phylo_sum_df)
setnames(phylo_sum_df, "", "Sample_ID", skip_absent = T)
phylo_sum_df
# write.table(phylo_sum_df, "C:/Users/saini7/Desktop/read_counts.txt", sep="\t")
#summary statistics of sequence counts
summary(phylo_sum_df$sum)
#Next we will calculate summary statistics describing the sequence counts with the summary() function. We will then represent these stats with a boxplot and a histogram
histo<- ggplot(phylo_sum_df, aes(x = sum)) +
geom_histogram(color = "black", fill = "darkgoldenrod3", binwidth = 1000) +
ggtitle("Distribution of sample sequencing depth") +
xlab("Read counts") +
theme(axis.title.y = element_blank())+
theme(axis.text=element_text(size=24), axis.title=element_text(size=24))
histo
bacteria_ab <-  SamplesLC %>%
subset_taxa(
Kingdom == "Bacteria" & "Archaea"
)
bacteria_ab <-  SamplesLC %>%
subset_taxa(
Kingdom == "Bacteria")
View(bacteria_ab)
bacteria_ab1 = filter_taxa(bacteria_ab, function(x) sum(x > 3) > (0.20*length(x)), TRUE)
View(bacteria_ab1)
bacteria_ab1 = filter_taxa(bacteria_ab, function(x) sum(x > 3) > (0.20*length(x)), TRUE)
# bacteria_ab2  = transform_sample_counts(bacteria_ab1, function(x) x / sum(x))
#  GPrSI<-  tax_glom(GPSI, taxrank="Phylum")
bacteria_ab2 <- psmelt(bacteria_ab1)
View(bacteria_ab2)
#Filtering Chloroplast, mitochondria classification
bacteria_ab <-  SamplesLC %>%
subset_taxa(
Kingdom == "Bacteria")
#####Bacterial communities analysis
bacteria_ab1 = filter_taxa(bacteria_ab, function(x) sum(x > 3) > (0.20*length(x)), TRUE)
bacteria_ab2 <- psmelt(bacteria_ab1)
View(bacteria_ab2)
View(bacteria_ab2)
bacteria_ab2 <- psmelt(bacteria_ab1)
bacteria_ab3 <- bacteria_ab2[, -c(4,6, 7,9:19)]
GPSIA_2BC <- psmelt(Archaea)
GPSIA_2BC2 <- psmelt(GPSIA_2BC)
Archaea <-  SamplesLC %>%
subset_taxa(
Kingdom == "Archaea" &
Family  != "mitochondria" &
Class   != "Chloroplast")
GPSIA_2BC <- psmelt(Archaea)
GPSIA_2BC2 <- psmelt(GPSIA_2BC)
GPSIA_2BC2 <- GPSIA_2BC[, -c(4,6, 7,9:19)]
View(GPSIA_2BC2)
df3 <- rbind(bacteria_ab3, GPSIA_2BC2)
View(bacteria_ab3)
View(GPSIA_2BC2)
bacteria_ab2<-  tax_glom(bacteria_ab1, taxrank="Genus")
bacteria_ab2 <- psmelt(bacteria_ab2)
bacteria_ab3 <- bacteria_ab2[, -c(4,6, 7,9:19)]
View(bacteria_ab3)
df3 <- rbind(bacteria_ab3, GPSIA_2BC2)
View(df3)
df3 <- rbind(bacteria_ab3, GPSIA_2BC2)
df3_percent <- df3$Abundance / rowSums(df3$Abundance) * 100
df3$df3_percent <- df3$Abundance / rowSums(df3$Abundance) * 100
Archaea <-  SamplesLC %>%
subset_taxa(
Kingdom == "Archaea" &
Family  != "mitochondria" &
Class   != "Chloroplast")
GPSIA_2BC <- psmelt(Archaea)
GPSIA_2BC2 <- GPSIA_2BC[, -c(4,6, 7,9:19)]
df3 <- rbind(bacteria_ab3, GPSIA_2BC2)
df3$df3_percent <- df3$Abundance / length(df3$Abundance)
View(df3)
df3$AA_AB  <-  df3$df3_percent * gpsfSI$avg_cells_ml
df3$AA_AB  <-  df3$df3_percent * df3$avg_cells_ml
View(df3)
df3 %>%
group_by(Sample) %>%
df3$df3_percent <- df3$Abundance / length(df3$Abundance)
library(dplyr)
df3 %>%
group_by(Sample) %>%
df3$df3_percent <- df3$Abundance / length(df3$Abundance)
Archaea <-  SamplesLC %>%
subset_taxa(
Kingdom == "Archaea" &
Family  != "mitochondria" &
Class   != "Chloroplast")
GPSIA_2BC <- psmelt(Archaea)
GPSIA_2BC2 <- GPSIA_2BC[, -c(4,6, 7,9:19)]
df3 <- rbind(bacteria_ab3, GPSIA_2BC2)
df4<-    df3 %>%
group_by(Sample) %>%
summarise(n = n()) %>%
mutate(freq = n / sum(n))
df4<-    df3 %>%
group_by(Sample) %>%
summarise(n = n())
df4<-    df3 %>%
group_by(Sample) %>%
summarise(npp =Abundance / length(Abundance))
View(df4)
df4<-    df3 %>%
group_by(Sample) %>%
summarise(Abundance / length(Abundance))
View(df4)
Archaea <-  SamplesLC %>%
subset_taxa(
Kingdom == "Archaea" &
Family  != "mitochondria" &
Class   != "Chloroplast")
GPSIA_2BC <- psmelt(Archaea)
GPSIA_2BC2 <- GPSIA_2BC[, -c(4,6, 7,9:19)]
df3 <- rbind(bacteria_ab3, GPSIA_2BC2)
df3 %>% group_by(Sample) %>% mutate(proc = (Abundance/sum(Abundance) * 100))
View(df3)
Archaea <-  SamplesLC %>%
subset_taxa(
Kingdom == "Archaea" &
Family  != "mitochondria" &
Class   != "Chloroplast")
GPSIA_2BC <- psmelt(Archaea)
GPSIA_2BC2 <- GPSIA_2BC[, -c(4,6, 7,9:19)]
df3 <- rbind(bacteria_ab3, GPSIA_2BC2)
df4<-   df3 %>% group_by(Sample) %>% mutate(proc = (Abundance/sum(Abundance) * 100))
View(df4)
df4$AA_AB  <-  df4$df3_percent * df4$avg_cells_ml
df4$AA_AB  <-  df4$proc * df4$avg_cells_ml
View(AA_AB)
View(AA_AB)
View(df4)
df4<-   df3 %>% group_by(Sample) %>% mutate(proc = (Abundance/sum(Abundance) / 100))
df4$AA_AB  <-  df4$proc * df4$avg_cells_ml
View(df4)
df4<-   df3 %>% group_by(Sample) %>% mutate(proc = ((Abundance/sum(Abundance) * 100))/100)
df4$AA_AB  <-  df4$proc * df4$avg_cells_ml
Archaea <-  SamplesLC %>%
subset_taxa(
Kingdom == "Archaea" &
Family  != "mitochondria" &
Class   != "Chloroplast")
GPSIA_2BC <- psmelt(Archaea)
GPSIA_2BC2 <- GPSIA_2BC[, -c(4,6, 7,9:19)]
df3 <- rbind(bacteria_ab3, GPSIA_2BC2)
df4<-   df3 %>% group_by(Sample) %>% mutate(proc = ((Abundance/sum(Abundance) * 100))/100)
df4$AA_AB  <-  df4$proc * df4$avg_cells_ml
View(df4)
View(df4)
if (!requireNamespace("BiocManager", quietly = TRUE))
install.packages("BiocManager")
BiocManager::install("wiggleplotr")
library(knitr)
require(knitr)
install.packages("xfun")
install.packages("xfun")
library(knitr)
require(knitr)
#opts_knit$set(root.dir = "~/Box Sync/files_for_R/")
#setwd("~/Desktop/files_for_R/")
setwd("~/GitHub/Lake_Cadagno_microbial_loop_Saini_et_al_2021/16s_Files_R_codes/")
knitr::opts_chunk$set(eval = TRUE,
echo = TRUE,
cache = FALSE,
include = TRUE,
collapse = FALSE,
message=FALSE,
warning=FALSE,
dependson = NULL,
error = TRUE,
fig.align = "center")
library(ggplot2)
library(vegan)
library(dplyr)
library(scales)
library(grid)
library(reshape2)
library(plyr)
library(phyloseq)
library(magrittr)
library(geosphere)
library(matrixStats)
library(data.table)
library(DT)
library(colorspace)
library(corrplot)
library(Hmisc)
library(tidyverse)
install.packages("hms")
library(knitr)
require(knitr)
#opts_knit$set(root.dir = "~/Box Sync/files_for_R/")
#setwd("~/Desktop/files_for_R/")
setwd("~/GitHub/Lake_Cadagno_microbial_loop_Saini_et_al_2021/16s_Files_R_codes/")
knitr::opts_chunk$set(eval = TRUE,
echo = TRUE,
cache = FALSE,
include = TRUE,
collapse = FALSE,
message=FALSE,
warning=FALSE,
dependson = NULL,
error = TRUE,
fig.align = "center")
library(ggplot2)
library(vegan)
library(dplyr)
library(scales)
library(grid)
library(reshape2)
library(plyr)
library(phyloseq)
library(magrittr)
library(geosphere)
library(matrixStats)
library(data.table)
library(DT)
library(colorspace)
library(corrplot)
library(Hmisc)
library(tidyverse)
install.packages("tidyverse")
library(knitr)
require(knitr)
#opts_knit$set(root.dir = "~/Box Sync/files_for_R/")
#setwd("~/Desktop/files_for_R/")
setwd("~/GitHub/Lake_Cadagno_microbial_loop_Saini_et_al_2021/16s_Files_R_codes/")
knitr::opts_chunk$set(eval = TRUE,
echo = TRUE,
cache = FALSE,
include = TRUE,
collapse = FALSE,
message=FALSE,
warning=FALSE,
dependson = NULL,
error = TRUE,
fig.align = "center")
library(ggplot2)
library(vegan)
library(dplyr)
library(scales)
library(grid)
library(reshape2)
library(plyr)
library(phyloseq)
library(magrittr)
library(geosphere)
library(matrixStats)
library(data.table)
library(DT)
library(colorspace)
library(corrplot)
library(Hmisc)
library(tidyverse)
install.packages("hms")
